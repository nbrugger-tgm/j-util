// generated by tscfg 0.9.96 on Sat Jun 06 11:43:19 CEST 2020
// source: ../local-admin.cfg

package com.niton.util.config;

public class UtilConfig {
  public final UtilConfig.General   general;
  public final UtilConfig.Logging   logging;
  public final UtilConfig.Reporting reporting;
  public final UtilConfig.Security  security;
  public final UtilConfig.Setup     setup;
  public static class General {
    public final int db_check_interval;
    
    public General(com.typesafe.config.Config c, java.lang.String parentPath, $TsCfgValidator $tsCfgValidator) {
      this.db_check_interval = c.hasPathOrNull("db-check-interval") ? c.getInt("db-check-interval") : 60;
    }
  }
  
  public static class Logging {
    public final java.lang.String console;
    public final int exception_id_size;
    public final Logging.File file;
    public final Logging.Options options;
    public static class File {
      public final java.lang.String fatal;
      public final java.lang.String general;
      public final java.lang.String security;
      
      public File(com.typesafe.config.Config c, java.lang.String parentPath, $TsCfgValidator $tsCfgValidator) {
        this.fatal = c.hasPathOrNull("fatal") ? c.getString("fatal") : "EXCEPTION";
        this.general = c.hasPathOrNull("general") ? c.getString("general") : "EXCEPTION";
        this.security = c.hasPathOrNull("security") ? c.getString("security") : "WARNING";
      }
    }
    
    public static class Options {
      public final Options.Console console;
      public final Options.File2 file;
      public static class Console {
        public final boolean class_;
        public final boolean context;
        public final boolean date;
        public final boolean level;
        public final boolean module;
        public final boolean package_;
        public final boolean seconds;
        public final boolean time;
        
        public Console(com.typesafe.config.Config c, java.lang.String parentPath, $TsCfgValidator $tsCfgValidator) {
          this.class_ = c.hasPathOrNull("class") && c.getBoolean("class");
          this.context = !c.hasPathOrNull("context") || c.getBoolean("context");
          this.date = c.hasPathOrNull("date") && c.getBoolean("date");
          this.level = !c.hasPathOrNull("level") || c.getBoolean("level");
          this.module = c.hasPathOrNull("module") && c.getBoolean("module");
          this.package_ = c.hasPathOrNull("package") && c.getBoolean("package");
          this.seconds = c.hasPathOrNull("seconds") && c.getBoolean("seconds");
          this.time = c.hasPathOrNull("time") && c.getBoolean("time");
        }
      }
      
      public static class File2 {
        public final boolean class_;
        public final boolean context;
        public final boolean date;
        public final boolean level;
        public final boolean module;
        public final boolean package_;
        public final boolean seconds;
        public final boolean time;
        
        public File2(com.typesafe.config.Config c, java.lang.String parentPath, $TsCfgValidator $tsCfgValidator) {
          this.class_ = !c.hasPathOrNull("class") || c.getBoolean("class");
          this.context = c.hasPathOrNull("context") && c.getBoolean("context");
          this.date = c.hasPathOrNull("date") && c.getBoolean("date");
          this.level = !c.hasPathOrNull("level") || c.getBoolean("level");
          this.module = !c.hasPathOrNull("module") || c.getBoolean("module");
          this.package_ = c.hasPathOrNull("package") && c.getBoolean("package");
          this.seconds = !c.hasPathOrNull("seconds") || c.getBoolean("seconds");
          this.time = !c.hasPathOrNull("time") || c.getBoolean("time");
        }
      }
      
      public Options(com.typesafe.config.Config c, java.lang.String parentPath, $TsCfgValidator $tsCfgValidator) {
        this.console = c.hasPathOrNull("console") ? new Options.Console(c.getConfig("console"), parentPath + "console.", $tsCfgValidator) : new Options.Console(com.typesafe.config.ConfigFactory.parseString("console{}"), parentPath + "console.", $tsCfgValidator);
        this.file = c.hasPathOrNull("file") ? new Options.File2(c.getConfig("file"), parentPath + "file.", $tsCfgValidator) : new Options.File2(com.typesafe.config.ConfigFactory.parseString("file{}"), parentPath + "file.", $tsCfgValidator);
      }
    }
    
    public Logging(com.typesafe.config.Config c, java.lang.String parentPath, $TsCfgValidator $tsCfgValidator) {
      this.console = c.hasPathOrNull("console") ? c.getString("console") : "INFO";
      this.exception_id_size = c.hasPathOrNull("exception-id-size") ? c.getInt("exception-id-size") : 3;
      this.file = c.hasPathOrNull("file") ? new Logging.File(c.getConfig("file"), parentPath + "file.", $tsCfgValidator) : new Logging.File(com.typesafe.config.ConfigFactory.parseString("file{}"), parentPath + "file.", $tsCfgValidator);
      this.options = c.hasPathOrNull("options") ? new Logging.Options(c.getConfig("options"), parentPath + "options.", $tsCfgValidator) : new Logging.Options(com.typesafe.config.ConfigFactory.parseString("options{}"), parentPath + "options.", $tsCfgValidator);
    }
  }
  
  public static class Reporting {
    public final Reporting.Daily_mail daily_mail;
    public final boolean mail;
    public final java.util.List<java.lang.String> personal;
    public final Reporting.Sending sending;
    public static class Daily_mail {
      public final java.lang.String attachment_name;
      
      public Daily_mail(com.typesafe.config.Config c, java.lang.String parentPath, $TsCfgValidator $tsCfgValidator) {
        this.attachment_name = c.hasPathOrNull("attachment-name") ? c.getString("attachment-name") : "Bericht.pdf";
      }
    }
    
    public static class Sending {
      public final java.lang.String mail;
      public final java.lang.String password;
      public final java.lang.String smtp_host;
      public final java.time.Duration smtp_port;
      public final java.lang.String smtp_ssl_trust;
      
      public Sending(com.typesafe.config.Config c, java.lang.String parentPath, $TsCfgValidator $tsCfgValidator) {
        this.mail = c.hasPathOrNull("mail") ? c.getString("mail") : "report@speed.at";
        this.password = c.hasPathOrNull("password") ? c.getString("password") : "King#010";
        this.smtp_host = c.hasPathOrNull("smtp-host") ? c.getString("smtp-host") : "bsmtp.A1.net";
        this.smtp_port = c.hasPathOrNull("smtp-port") ? c.getDuration("smtp-port") : java.time.Duration.parse("PT0.587S");
        this.smtp_ssl_trust = c.hasPathOrNull("smtp-ssl-trust") ? c.getString("smtp-ssl-trust") : "bsmtp.A1.net";
      }
    }
    
    public Reporting(com.typesafe.config.Config c, java.lang.String parentPath, $TsCfgValidator $tsCfgValidator) {
      this.daily_mail = c.hasPathOrNull("daily-mail") ? new Reporting.Daily_mail(c.getConfig("daily-mail"), parentPath + "daily-mail.", $tsCfgValidator) : new Reporting.Daily_mail(com.typesafe.config.ConfigFactory.parseString("daily-mail{}"), parentPath + "daily-mail.", $tsCfgValidator);
      this.mail = !c.hasPathOrNull("mail") || c.getBoolean("mail");
      this.personal = $_L$_str(c.getList("personal"), parentPath, $tsCfgValidator);
      this.sending = c.hasPathOrNull("sending") ? new Reporting.Sending(c.getConfig("sending"), parentPath + "sending.", $tsCfgValidator) : new Reporting.Sending(com.typesafe.config.ConfigFactory.parseString("sending{}"), parentPath + "sending.", $tsCfgValidator);
    }
  }
  
  public static class Security {
    public final Security.Login login;
    public final int perma_duration;
    public final java.util.List<java.lang.String> personal;
    public final Security.Session session;
    public static class Login {
      public final double login_delay;
      public final int max_acc_tries;
      public final int max_accounts_per_ip;
      public final int max_ip_tries;
      public final int max_ips_per_account;
      public final int tries_bevore_waiting;
      public final int waiting_area_stop;
      public final int waiting_area_time;
      
      public Login(com.typesafe.config.Config c, java.lang.String parentPath, $TsCfgValidator $tsCfgValidator) {
        this.login_delay = c.hasPathOrNull("login-delay") ? c.getDouble("login-delay") : 1.5;
        this.max_acc_tries = c.hasPathOrNull("max-acc-tries") ? c.getInt("max-acc-tries") : 25;
        this.max_accounts_per_ip = c.hasPathOrNull("max-accounts-per-ip") ? c.getInt("max-accounts-per-ip") : 3;
        this.max_ip_tries = c.hasPathOrNull("max-ip-tries") ? c.getInt("max-ip-tries") : 30;
        this.max_ips_per_account = c.hasPathOrNull("max-ips-per-account") ? c.getInt("max-ips-per-account") : 10;
        this.tries_bevore_waiting = c.hasPathOrNull("tries-bevore-waiting") ? c.getInt("tries-bevore-waiting") : 5;
        this.waiting_area_stop = c.hasPathOrNull("waiting-area-stop") ? c.getInt("waiting-area-stop") : 5;
        this.waiting_area_time = c.hasPathOrNull("waiting-area-time") ? c.getInt("waiting-area-time") : 10;
      }
    }
    
    public static class Session {
      public final Session.Ip_ban ip_ban;
      public final int valid_for;
      public static class Ip_ban {
        public final boolean cumulative;
        public final int cumulative_max;
        public final int duration;
        public final int perma_ban_on;
        
        public Ip_ban(com.typesafe.config.Config c, java.lang.String parentPath, $TsCfgValidator $tsCfgValidator) {
          this.cumulative = c.hasPathOrNull("cumulative") && c.getBoolean("cumulative");
          this.cumulative_max = c.hasPathOrNull("cumulative-max") ? c.getInt("cumulative-max") : 300000;
          this.duration = c.hasPathOrNull("duration") ? c.getInt("duration") : 2000;
          this.perma_ban_on = c.hasPathOrNull("perma-ban-on") ? c.getInt("perma-ban-on") : 50;
        }
      }
      
      public Session(com.typesafe.config.Config c, java.lang.String parentPath, $TsCfgValidator $tsCfgValidator) {
        this.ip_ban = c.hasPathOrNull("ip-ban") ? new Session.Ip_ban(c.getConfig("ip-ban"), parentPath + "ip-ban.", $tsCfgValidator) : new Session.Ip_ban(com.typesafe.config.ConfigFactory.parseString("ip-ban{}"), parentPath + "ip-ban.", $tsCfgValidator);
        this.valid_for = c.hasPathOrNull("valid-for") ? c.getInt("valid-for") : 30;
      }
    }
    
    public Security(com.typesafe.config.Config c, java.lang.String parentPath, $TsCfgValidator $tsCfgValidator) {
      this.login = c.hasPathOrNull("login") ? new Security.Login(c.getConfig("login"), parentPath + "login.", $tsCfgValidator) : new Security.Login(com.typesafe.config.ConfigFactory.parseString("login{}"), parentPath + "login.", $tsCfgValidator);
      this.perma_duration = c.hasPathOrNull("perma-duration") ? c.getInt("perma-duration") : 168;
      this.personal = $_L$_str(c.getList("personal"), parentPath, $tsCfgValidator);
      this.session = c.hasPathOrNull("session") ? new Security.Session(c.getConfig("session"), parentPath + "session.", $tsCfgValidator) : new Security.Session(com.typesafe.config.ConfigFactory.parseString("session{}"), parentPath + "session.", $tsCfgValidator);
    }
  }
  
  public static class Setup {
    public final java.lang.String admin_mail;
    public final java.lang.String root_group;
    
    public Setup(com.typesafe.config.Config c, java.lang.String parentPath, $TsCfgValidator $tsCfgValidator) {
      this.admin_mail = c.hasPathOrNull("admin-mail") ? c.getString("admin-mail") : "admin@kingrestaurants.at";
      this.root_group = c.hasPathOrNull("root-group") ? c.getString("root-group") : "ROOT";
    }
  }
  
  public UtilConfig(com.typesafe.config.Config c) {
    final $TsCfgValidator $tsCfgValidator = new $TsCfgValidator();
    final java.lang.String parentPath = "";
    this.general = c.hasPathOrNull("general") ? new UtilConfig.General(c.getConfig("general"), parentPath + "general.", $tsCfgValidator) : new UtilConfig.General(com.typesafe.config.ConfigFactory.parseString("general{}"), parentPath + "general.", $tsCfgValidator);
    this.logging = c.hasPathOrNull("logging") ? new UtilConfig.Logging(c.getConfig("logging"), parentPath + "logging.", $tsCfgValidator) : new UtilConfig.Logging(com.typesafe.config.ConfigFactory.parseString("logging{}"), parentPath + "logging.", $tsCfgValidator);
    this.reporting = c.hasPathOrNull("reporting") ? new UtilConfig.Reporting(c.getConfig("reporting"), parentPath + "reporting.", $tsCfgValidator) : new UtilConfig.Reporting(com.typesafe.config.ConfigFactory.parseString("reporting{}"), parentPath + "reporting.", $tsCfgValidator);
    this.security = c.hasPathOrNull("security") ? new UtilConfig.Security(c.getConfig("security"), parentPath + "security.", $tsCfgValidator) : new UtilConfig.Security(com.typesafe.config.ConfigFactory.parseString("security{}"), parentPath + "security.", $tsCfgValidator);
    this.setup = c.hasPathOrNull("setup") ? new UtilConfig.Setup(c.getConfig("setup"), parentPath + "setup.", $tsCfgValidator) : new UtilConfig.Setup(com.typesafe.config.ConfigFactory.parseString("setup{}"), parentPath + "setup.", $tsCfgValidator);
    $tsCfgValidator.validate();
  }

  private static java.util.List<java.lang.String> $_L$_str(com.typesafe.config.ConfigList cl, java.lang.String parentPath, $TsCfgValidator $tsCfgValidator) {
    java.util.ArrayList<java.lang.String> al = new java.util.ArrayList<>();
    for (com.typesafe.config.ConfigValue cv: cl) {
      al.add($_str(cv));
    }
    return java.util.Collections.unmodifiableList(al);
  }
  private static java.lang.RuntimeException $_expE(com.typesafe.config.ConfigValue cv, java.lang.String exp) {
    java.lang.Object u = cv.unwrapped();
    return new java.lang.RuntimeException(cv.origin().lineNumber()
      + ": expecting: " +exp + " got: " + (u instanceof java.lang.String ? "\"" +u+ "\"" : u));
  }

  private static java.lang.String $_str(com.typesafe.config.ConfigValue cv) {
    return java.lang.String.valueOf(cv.unwrapped());
  }

  private static final class $TsCfgValidator  {
    private final java.util.List<java.lang.String> badPaths = new java.util.ArrayList<>();
    
    void addBadPath(java.lang.String path, com.typesafe.config.ConfigException e) {
      badPaths.add("'" + path + "': " + e.getClass().getName() + "(" + e.getMessage() + ")");
    }
    
    void validate() {
      if (!badPaths.isEmpty()) {
        java.lang.StringBuilder sb = new java.lang.StringBuilder("Invalid configuration:");
        for (java.lang.String path : badPaths) {
          sb.append("\n    ").append(path);
        }
        throw new com.typesafe.config.ConfigException(sb.toString()) {};
      }
    }
  }
}
      
